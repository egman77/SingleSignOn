<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!--<section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>-->
    <section name="microsoft.identityModel" type="Microsoft.IdentityModel.Configuration.MicrosoftIdentityModelSection, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
    <!--<section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>-->
  </configSections>
 
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0"/>
    <add key="webpages:Enabled" value="false"/>
    <add key="PreserveLoginUrl" value="true"/>
    <add key="ClientValidationEnabled" value="true"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>
    <add key="ida:FederationMetadataLocation" value="http://customsts.dev/federation/metadata.xml"/>
    <!-- 注销时用到此地址-->
    <add key="ida:Issuer" value="http://localhost:24983/"/>
    <add key="ida:ProviderSelection" value="productionSTS"/>
  </appSettings>
  <location path="user">
    <system.web>
      <authorization>
        <deny users="?"/>
      </authorization>
    </system.web>
  </location>
  <system.web>
    <!-- 防止误检查-->
    <httpRuntime requestValidationType="RelyingParty3.Securities.MySampleRequestValidator"/>
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <!--<add assembly="Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>-->    
      </assemblies>
    </compilation>
    <authorization>
      <allow users="*"/>
    </authorization>
    <authentication mode="None"/>
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers"/>
        <add namespace="System.Web.Mvc"/>
        <add namespace="System.Web.Mvc.Ajax"/>
        <add namespace="System.Web.Mvc.Html"/>
        <add namespace="System.Web.Routing"/>
        <add namespace="System.Web.WebPages"/>
      </namespaces>
    </pages>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit"/>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit"/>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0"/>
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0"/>
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0"/>
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0"/>
    </handlers>
    <modules>
      <remove name="FormsAuthentication"/>
      <add name="WSFederationAuthenticationModule" type="Microsoft.IdentityModel.Web.WSFederationAuthenticationModule, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" preCondition="managedHandler"/>
      <add name="SessionAuthenticationModule" type="Microsoft.IdentityModel.Web.SessionAuthenticationModule, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" preCondition="managedHandler"/>
    </modules>
  </system.webServer>
  <!-- 这时WIF3.5时的配置信息--> 
  <microsoft.identityModel>
    <service>
      <issuerNameRegistry type="RelyingParty3.Securities.MyTrustedIssuerNameRegistry"/>
      <audienceUris>
        <add value="http://localhost:26758/"/>
      </audienceUris>
     
      
      <federatedAuthentication>
        <cookieHandler requireSsl="false"/>
        <wsFederation passiveRedirectEnabled="true" issuer="http://localhost:24983/" realm="http://localhost:26758/" reply="http://localhost:26758/" requireHttps="false"/>
       <!-- If installing SSO on a load-balanced server or cloud environment, specify for findValue the same thumbprint as the trustedIssuers. This will enable RSA cookie encryption instead of DPAPI, thus bypassing the cookie size limit-->
        
      </federatedAuthentication>
      <certificateValidation certificateValidationMode="None"/>
      <serviceCertificate>
        <!--<certificateReference x509FindType="FindByThumbprint" findValue="E780E0815DB4B7B65FE0A23D6E45BF00650E742E"/>-->
        <certificateReference x509FindType='FindBySubjectName' findValue='localhost' storeLocation='LocalMachine' storeName='My' />
      </serviceCertificate>
      <securityTokenHandlers>
        <!-- Replace the SessionSecurityTokenHandler with our own. -->
        <remove type="Microsoft.IdentityModel.Tokens.SessionSecurityTokenHandler, Microsoft.IdentityModel, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
        <add type="RelyingParty3.Securities.RsaEncryptedSessionSecurityTokenHandler" />
        <!-- Replace the line above with the line below to use the MachineKeyProtectionTransform to protect the session cookie. --><!--
        --><!--<add type="MachineKeySessionSecurityTokenHandler" />--><!--
        <securityTokenHandlerConfiguration>
          <tokenReplayDetection enabled="true">
            <replayCache type="SharedTokenReplayCache" />
          </tokenReplayDetection>
        </securityTokenHandlerConfiguration>-->
      </securityTokenHandlers>
    </service>
  </microsoft.identityModel>
  <!-- 以下是WIF 4.0 时的配置信息-->
  <!--<system.identityModel>
    <identityConfiguration>
      <audienceUris>
        <add value="http://localhost:26758/"/>
      </audienceUris>
      <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <trustedIssuers>
          <add thumbprint="E780E0815DB4B7B65FE0A23D6E45BF00650E742E" name="http://localhost:24983/"/>
        </trustedIssuers>
      </issuerNameRegistry>
      --><!--certificationValidationMode set to "None" by the the Identity and Access Tool for Visual Studio. For development purposes.--><!--
      <certificateValidation certificateValidationMode="None"/>
    </identityConfiguration>
  </system.identityModel>
  <system.identityModel.services>
    <federationConfiguration>
      <cookieHandler requireSsl="false"/>
      <wsFederation passiveRedirectEnabled="true" issuer="http://localhost:24983/" realm="http://localhost:26758/" reply="http://localhost:26758/" requireHttps="false"/>
       If installing SSO on a load-balanced server or cloud environment, specify for findValue the same thumbprint as the trustedIssuers. This will enable RSA cookie encryption instead of DPAPI, thus bypassing the cookie size limit 
      <serviceCertificate>
        <certificateReference x509FindType="FindByThumbprint" findValue=""/>
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>-->
</configuration>